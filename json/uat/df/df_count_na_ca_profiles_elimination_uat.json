{
  "name": "df_count_na_ca_profiles_elimination_uat",
  "properties": {
    "folder": {
      "name": "ccore/TDATA-4391/uat/container"
    },
    "type": "MappingDataFlow",
    "typeProperties": {
      "sources": [
        {
          "dataset": {
            "referenceName": "ds_cntnr_ca_profile_uat",
            "type": "DatasetReference"
          },
          "name": "caProfile"
        },
        {
          "dataset": {
            "referenceName": "ds_csv_na_ca_unique_orders_uat",
            "type": "DatasetReference"
          },
          "name": "orderHistory"
        },
        {
          "dataset": {
            "referenceName": "ds_cntnr_na_profile_uat",
            "type": "DatasetReference"
          },
          "name": "naProfile"
        }
      ],
      "sinks": [
        {
          "dataset": {
            "referenceName": "ds_count_eliminated_profiles_uat",
            "type": "DatasetReference"
          },
          "name": "sinkEmailNotVerifiedProfile"
        },
        {
          "dataset": {
            "referenceName": "ds_count_eliminated_profiles_uat",
            "type": "DatasetReference"
          },
          "name": "sinkNotRegisteredProfile"
        },
        {
          "dataset": {
            "referenceName": "ds_count_eliminated_profiles_uat",
            "type": "DatasetReference"
          },
          "name": "sinkNotLoggedInProfile"
        },
        {
          "dataset": {
            "referenceName": "ds_count_eliminated_profiles_uat",
            "type": "DatasetReference"
          },
          "name": "sinkBannedDomainProfile"
        },
        {
          "dataset": {
            "referenceName": "ds_count_eliminated_profiles_uat",
            "type": "DatasetReference"
          },
          "name": "sinkNullEmails"
        },
        {
          "dataset": {
            "referenceName": "ds_count_eliminated_profiles_uat",
            "type": "DatasetReference"
          },
          "name": "sinkNullEmailsNa"
        },
        {
          "dataset": {
            "referenceName": "ds_count_eliminated_profiles_uat",
            "type": "DatasetReference"
          },
          "name": "sinkEmailNotVerifiedProfileNa"
        },
        {
          "dataset": {
            "referenceName": "ds_count_eliminated_profiles_uat",
            "type": "DatasetReference"
          },
          "name": "sinkNotRegisteredProfileNa"
        },
        {
          "dataset": {
            "referenceName": "ds_count_eliminated_profiles_uat",
            "type": "DatasetReference"
          },
          "name": "sinkNotLoggedInProfileNa"
        },
        {
          "dataset": {
            "referenceName": "ds_count_eliminated_profiles_uat",
            "type": "DatasetReference"
          },
          "name": "sinkBannedDomainProfileNa"
        }
      ],
      "transformations": [
        {
          "name": "EmailVerified"
        },
        {
          "name": "RegisteredProfile"
        },
        {
          "name": "LoggedInProfile"
        },
        {
          "name": "selectReqCol"
        },
        {
          "name": "EmailNotVerified"
        },
        {
          "name": "derivedEmailNotVerified"
        },
        {
          "name": "NotRegisteredProfile"
        },
        {
          "name": "derivedNotRegistered"
        },
        {
          "name": "NotLoggedInProfile"
        },
        {
          "name": "derivedNotLoggedInProfile"
        },
        {
          "name": "DomainWhichAreBanned"
        },
        {
          "name": "derivedBannedDomain"
        },
        {
          "name": "filterNullEmailProfiles"
        },
        {
          "name": "derivedNullEmailProfiles"
        },
        {
          "name": "CaProfilesHavingNoOrderHistory"
        },
        {
          "name": "select1"
        },
        {
          "name": "select2"
        },
        {
          "name": "select3"
        },
        {
          "name": "select4"
        },
        {
          "name": "select5"
        },
        {
          "name": "NaProfilesHavingNoOrderHistory"
        },
        {
          "name": "selectRequiredCol"
        },
        {
          "name": "filterNullEmailProfilesNa"
        },
        {
          "name": "derivedColumn1"
        },
        {
          "name": "select6"
        },
        {
          "name": "emailNotVerifiedNa"
        },
        {
          "name": "derivedEmailNotVerifiedNa"
        },
        {
          "name": "select7"
        },
        {
          "name": "EmailVerifiedNa"
        },
        {
          "name": "NotRegisteredProfileNa"
        },
        {
          "name": "derivedNotRegisteredNa"
        },
        {
          "name": "select8"
        },
        {
          "name": "RegisteredProfileNa"
        },
        {
          "name": "NotLoggedInProfileNa"
        },
        {
          "name": "derivedNotLoggedInProfileNa"
        },
        {
          "name": "select9"
        },
        {
          "name": "LoggedInProfileNa"
        },
        {
          "name": "DomainWhichAreBannedNa"
        },
        {
          "name": "derivedBannedDomainNa"
        },
        {
          "name": "select10"
        }
      ],
      "scriptLines": [
        "parameters{",
        "     bannedDomainPara as string (\"Email belongs to restricted domain\"),",
        "     loginPara as string (\"Not logged in since 1 year\"),",
        "     createdPara as string (\"Email not verified and profile created date is more than 1 year\"),",
        "     isRegisteredPara as string (\"Profile is not registered and created date is more than 1 year\"),",
        "     nullEmails as string (\"Email address is null, invalid profile\"),",
        "     eliCA as string (\"Eliminated CA Profile\"),",
        "     ret as string (\"Retained Profile\"),",
        "     eliNA as string (\"Eliminated NA Profile\")",
        "}",
        "source(output(",
        "          updateTs as integer,",
        "          firstName as string,",
        "          lastName as string,",
        "          email as string,",
        "          profileStatus as string,",
        "          token as string,",
        "          emailHistory as string,",
        "          customerId as string,",
        "          preferredStores as string,",
        "          mobileNumber as integer,",
        "          homeNumber as string,",
        "          isRegistered as boolean,",
        "          zipCode as string,",
        "          schDefaultBillingAddressLine1 as string,",
        "          schDefaultShippingAddressLine1 as string,",
        "          region as string,",
        "          webhookMessageStatus as string,",
        "          janrainUuid as string,",
        "          oldFlCid as string,",
        "          oldKflCid as string,",
        "          oldLflCid as string,",
        "          oldFsCid as string,",
        "          oldFaCid as string,",
        "          oldCsCid as string,",
        "          oldFlcaCid as string,",
        "          oldEbCid as string,",
        "          fraudFlag as string[],",
        "          bannerOfOrigin as string,",
        "          emailVerified as long,",
        "          militaryStatus as string,",
        "          militaryRequestId as string,",
        "          militaryExpiryDate as string,",
        "          storeNumber as string,",
        "          previousEmail as string,",
        "          password as string,",
        "          flxInfo as string,",
        "          optIns as (banner as string)[],",
        "          created as long,",
        "          birthday as string,",
        "          inStoreSignUp as boolean,",
        "          createdBy as string,",
        "          xstoreId as string,",
        "          retailStoreId as string,",
        "          relateFailure as string,",
        "          changedFields as string,",
        "          csaInfo as string,",
        "          customerFlag as string,",
        "          event as string,",
        "          changedBy as string,",
        "          vipInfo as (vipNumber as string, status as string, isVip as boolean, lifeTimePoints as integer, lastLevelMoveDate as integer, lastLevelUpdateDateHyb as integer, loyaltyExpireDate as integer, dollarsSpent as (currencyIso as string, formattedValue as string, value as integer), dollarsNeedToSpend as string, loyaltyMinThreshold as string, loyaltyTargetThreshold as (currencyIso as string, formattedValue as string, value as integer)),",
        "          preferredLanguage as string,",
        "          lastLogin as string,",
        "          lastFailedLogin as string,",
        "          passwordChangeDate as string,",
        "          failedLoginAttempts as integer,",
        "          streetAddress as string,",
        "          country as string,",
        "          gender as string,",
        "          customerSyncStatus as string,",
        "          updateTsExceptLogin as integer,",
        "          relateCustomerId as string",
        "     ),",
        "     allowSchemaDrift: true,",
        "     validateSchema: false,",
        "     format: 'document',",
        "     systemColumns: false,",
        "     throughput: 1000) ~> caProfile",
        "source(output(",
        "          customerId as string,",
        "          email as string",
        "     ),",
        "     allowSchemaDrift: true,",
        "     validateSchema: false,",
        "     ignoreNoFilesFound: false) ~> orderHistory",
        "source(output(",
        "          updateTs as long,",
        "          firstName as string,",
        "          lastName as string,",
        "          email as string,",
        "          profileStatus as string,",
        "          token as string,",
        "          emailHistory as string[],",
        "          customerId as string,",
        "          preferredStores as (FL as (storeId as string, division as string, name as string, phone as string, line1 as string, line2 as string, city as string, state as string, country as string, zipcode as string, isocodeShort as string, latitude as double, longitude as double, status as string), FA as (storeId as string, division as string, name as string, phone as string, line1 as string, line2 as string, city as string, state as string, country as string, zipcode as string, isocodeShort as string, latitude as double, longitude as double, status as string), CS as (storeId as string, division as string, name as string, phone as string, line1 as string, line2 as string, city as string, state as string, country as string, zipcode as string, isocodeShort as string, latitude as double, longitude as double, status as string), KFL as (storeId as string, division as string, name as string, phone as string, line1 as string, line2 as string, city as string, state as string, country as string, zipcode as string, isocodeShort as string)),",
        "          mobileNumber as string,",
        "          homeNumber as string,",
        "          isRegistered as boolean,",
        "          zipCode as string,",
        "          schDefaultBillingAddressLine1 as string,",
        "          schDefaultShippingAddressLine1 as string,",
        "          region as string,",
        "          webhookMessageStatus as string,",
        "          janrainUuid as string,",
        "          oldFlCid as string,",
        "          oldKflCid as string,",
        "          oldLflCid as string,",
        "          oldFsCid as string,",
        "          oldFaCid as string,",
        "          oldCsCid as string,",
        "          oldFlcaCid as string,",
        "          oldEbCid as string,",
        "          fraudFlag as string,",
        "          bannerOfOrigin as string,",
        "          emailVerified as long,",
        "          militaryStatus as string,",
        "          militaryRequestId as string,",
        "          militaryExpiryDate as string,",
        "          storeNumber as string,",
        "          previousEmail as string,",
        "          password as string,",
        "          flxInfo as (flxEmailOptIn as boolean, loyaltyFlxEmailOptInBanner as string, loyaltyStatus as boolean, points as integer, tier as string, flxNumber as integer, ctNumber as integer, flxTcVersion as string, referralCode as string),",
        "          optIns as string[],",
        "          created as long,",
        "          birthday as string,",
        "          inStoreSignUp as boolean,",
        "          createdBy as string,",
        "          xstoreId as string,",
        "          retailStoreId as string,",
        "          relateFailure as boolean,",
        "          changedFields as string,",
        "          csaInfo as string,",
        "          customerFlag as string,",
        "          event as string,",
        "          changedBy as string,",
        "          vipInfo as string,",
        "          preferredLanguage as string,",
        "          lastLogin as string,",
        "          lastFailedLogin as string,",
        "          passwordChangeDate as string,",
        "          failedLoginAttempts as integer,",
        "          streetAddress as string,",
        "          country as string,",
        "          gender as string,",
        "          customerSyncStatus as string,",
        "          updateTsExceptLogin as integer,",
        "          relateCustomerId as string",
        "     ),",
        "     allowSchemaDrift: true,",
        "     validateSchema: false,",
        "     format: 'document') ~> naProfile",
        "selectReqCol filter(not(and(isNull(emailVerified), not(greaterOrEqual(toTimestamp(toLong(toString(created)),'yyyy-MM-dd HH:mm:ss'), subDays(currentTimestamp(), 365)))))) ~> EmailVerified",
        "EmailVerified filter(not(and(isRegistered == toBoolean('FALSE'), not(greaterOrEqual(toTimestamp(toLong(toString(created)),'yyyy-MM-dd HH:mm:ss'), subDays(currentTimestamp(), 365)))))) ~> RegisteredProfile",
        "RegisteredProfile filter(not(iif(and(isNull(lastLogin),or(bannerOfOrigin == 'flca',bannerOfOrigin == 'csca')), toBoolean('true'), iif(isNull(bannerOfOrigin), toBoolean('true'), and(not(greaterOrEqual(lastLogin,toString(subDays(currentTimestamp(),365)))), or(bannerOfOrigin == 'flca',bannerOfOrigin == 'csca')))))) ~> LoggedInProfile",
        "CaProfilesHavingNoOrderHistory select(mapColumn(",
        "          email,",
        "          customerId,",
        "          isRegistered,",
        "          janrainUuid,",
        "          bannerOfOrigin,",
        "          emailVerified,",
        "          created,",
        "          lastLogin",
        "     ),",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true) ~> selectReqCol",
        "selectReqCol filter(and(isNull(emailVerified), not(greaterOrEqual(toTimestamp(toLong(toString(created)),'yyyy-MM-dd HH:mm:ss'), subDays(currentTimestamp(), 365))))) ~> EmailNotVerified",
        "EmailNotVerified derive(eliminationReason = $createdPara,",
        "          profileStatus = $eliCA) ~> derivedEmailNotVerified",
        "EmailVerified filter(and(isRegistered == toBoolean('FALSE'), not(greaterOrEqual(toTimestamp(toLong(toString(created)),'yyyy-MM-dd HH:mm:ss'), subDays(currentTimestamp(), 365))))) ~> NotRegisteredProfile",
        "NotRegisteredProfile derive(eliminationReason = $isRegisteredPara,",
        "          profileStatus = $eliCA) ~> derivedNotRegistered",
        "RegisteredProfile filter(iif(and(isNull(lastLogin),or(bannerOfOrigin == 'flca',bannerOfOrigin == 'csca')), toBoolean('true'), iif(isNull(bannerOfOrigin), toBoolean('true'), and(not(greaterOrEqual(lastLogin,toString(subDays(currentTimestamp(),365)))), or(bannerOfOrigin == 'flca',bannerOfOrigin == 'csca'))))) ~> NotLoggedInProfile",
        "NotLoggedInProfile derive(eliminationReason = $loginPara,",
        "          profileStatus = $eliCA) ~> derivedNotLoggedInProfile",
        "LoggedInProfile filter(not(rlike(email,'^((?!soledupsneakz.club|atolemdro.com|aceslaya.club|shaszn.xyz|muhlach.com|luigisneaks.com|davidssnkrs.club|qq.com*|coneysoles.us|lizama.xyz|sincarts.com|hypecopped.com|youcopped.pw|dadswag.club|randys.cash|yididu.com|jimmyshoetron.com|15p.pw|ericwenhy.club|cookgod.club|og-cooks.com|guccicooks.com|shophiddenheat.com|amplifykicks.club|solesecret.xyz|tfn27.xyz|smy666.com|isellsneakers.com|jscarts.com|tiktokfreefollowers.com|solarcooks.xyz|jimmartoccia.club|wowitslem.com|kaltashi.club|thecelibate.club|ncshoes.club|coppedbyepic.us|nate123.club|solestrikes.com|snkrmail.com|jjsamson.club|coatalcf.club|sacredslots.com|33mail.com|caspermika.club|tn1220.club|dontfuckwithme.club|next-mail.info|cart198.club|sneakermonekys.club|mattykickz.club|ryucooks.club|hypexchange.net|cristianjgarcia.club|figsoles.club|laflame.club|troxer.club|bruhszn.club|naeucop.club|kxvcop.club|resellersunite.com|worldwidesneakers.club|doncarted.club|aiobotz.com|0815.ru|0wnd.net|0wnd.org|10minutemail.co.za|10minutemail.com|123-m.com|1fsdfdsfsdf.tk|1pad.de|20minutemail.com|21cn.com|2fdgdfgdfgdf.tk|2prong.com|30minutemail.com|33mail.com|3trtretgfrfe.tk|4gfdsgfdgfd.tk|4warding.com|5ghgfhfghfgh.tk|6hjgjhgkilkj.tk|6paq.com|7tags.com|9ox.net|a-bc.net|agedmail.com|ama-trade.de|amilegit.com|amiri.net|amiriindustries.com|anonmails.de|anonymbox.com|antichef.com|antichef.net|antireg.ru|antispam.de|antispammail.de|armyspy.com|artman-conception.com|azmeil.tk|baxomale.ht.cx|beefmilk.com|bigstring.com|binkmail.com|bio-muesli.net|bobmail.info|bodhi.lawlita.com|bofthew.com|bootybay.de|boun.cr|bouncr.com|breakthru.com|brefmail.com|bsnow.net|bspamfree.org|bugmenot.com|bund.us|burstmail.info|buymoreplays.com|byom.de|c2.hu|card.zp.ua|casualdx.com|cek.pm|centermail.com|centermail.net|chammy.info|childsavetrust.org|chogmail.com|choicemail1.com|clixser.com|cmail.net|cmail.org|coldemail.info|cool.fr.nf|courriel.fr.nf|courrieltemporaire.com|crapmail.org|cust.in|cuvox.de|d3p.dk|dacoolest.com|dandikmail.com|dayrep.com|dcemail.com|deadaddress.com|deadspam.com|delikkt.de|despam.it|despammed.com|devnullmail.com|dfgh.net|digitalsanctuary.com|dingbone.com|disposableaddress.com|disposableemailaddresses.com|disposableinbox.com|dispose.it|dispostable.com|dodgeit.com|dodgit.com|donemail.ru|dontreg.com|dontsendmespam.de|drdrb.net|dump-email.info|dumpandjunk.com|dumpyemail.com|e-mail.com|e-mail.org|e4ward.com|easytrashmail.com|einmalmail.de|einrot.com|eintagsmail.de|emailgo.de|emailias.com|emaillime.com|emailsensei.com|emailtemporanea.com|emailtemporanea.net|emailtemporar.ro|emailtemporario.com.br|emailthe.net|emailtmp.com|emailwarden.com|emailx.at.hm|emailxfer.com|emeil.in|emeil.ir|emz.net|ero-tube.org|evopo.com|explodemail.com|express.net.ua|eyepaste.com|fakeinbox.com|fakeinformation.com|fansworldwide.de|fantasymail.de|fightallspam.com|filzmail.com|fivemail.de|fleckens.hu|frapmail.com|friendlymail.co.uk|fuckingduh.com|fudgerub.com|fyii.de|garliclife.com|gehensiemirnichtaufdensack.de|get2mail.fr|getairmail.com|getmails.eu|getonemail.com|giantmail.de|girlsundertheinfluence.com|gishpuppy.com|gmial.com|goemailgo.com|gotmail.net|gotmail.org|gotti.otherinbox.com|great-host.in|greensloth.com|grr.la|gsrv.co.uk|guerillamail.biz|guerillamail.com|guerrillamail.biz|guerrillamail.com|guerrillamail.de|guerrillamail.info|guerrillamail.net|guerrillamail.org|guerrillamailblock.com|gustr.com|harakirimail.com|hat-geld.de|hatespam.org|herp.in|hidemail.de|hidzz.com|hmamail.com|hopemail.biz|ieh-mail.de|ikbenspamvrij.nl|imails.info|inbax.tk|inbox.si|inboxalias.com|inboxclean.com|inboxclean.org|infocom.zp.ua|instant-mail.de|ip6.li|irish2me.com|iwi.net|jetable.com|jetable.fr.nf|jetable.net|jetable.org|jnxjn.com|jourrapide.com|jsrsolutions.com|kasmail.com|kaspop.com|killmail.com|killmail.net|klassmaster.com|klzlk.com|koszmail.pl|kurzepost.de|lawlita.com|letthemeatspam.com|lhsdv.com|lifebyfood.com|link2mail.net|litedrop.com|lol.ovpn.to|lolfreak.net|lookugly.com|lortemail.dk|lr78.com|lroid.com|lukop.dk|m21.cc|mail-filter.com|mail-temporaire.fr|mail.by|mail.mezimages.net|mail.zp.ua|mail1a.de|mail21.cc|mail2rss.org|mail333.com|mailbidon.com|mailbiz.biz|mailblocks.com|mailbucket.org|mailcat.biz|mailcatch.com|mailde.de|mailde.info|maildrop.cc|maileimer.de|mailexpire.com|mailfa.tk|mailforspam.com|mailfreeonline.com|mailguard.me|mailin8r.com|mailinater.com|mailinator.com|mailinator.net|mailinator.org|mailinator2.com|mailincubator.com|mailismagic.com|mailme.lv|mailme24.com|mailmetrash.com|mailmoat.com|mailms.com|mailnesia.com|mailnull.com|mailorg.org|mailpick.biz|mailrock.biz|mailscrap.com|mailshell.com|mailsiphon.com|mailtemp.info|mailtome.de|mailtothis.com|mailtrash.net|mailtv.net|mailtv.tv|mailzilla.com|makemetheking.com|manybrain.com|mbx.cc|mega.zik.dj|meinspamschutz.de|meltmail.com|messagebeamer.de|mezimages.net|ministry-of-silly-walks.de|mintemail.com|misterpinball.de|moncourrier.fr.nf|monemail.fr.nf|monmail.fr.nf|monumentmail.com|mt2009.com|mt2014.com|mycard.net.ua|mycleaninbox.net|mymail-in.net|mypacks.net|mypartyclip.de|myphantomemail.com|mysamp.de|mytempemail.com|mytempmail.com|mytrashmail.com|nabuma.com|neomailbox.com|nepwk.com|nervmich.net|nervtmich.net|netmails.com|netmails.net|neverbox.com|nice-4u.com|nincsmail.hu|nnh.com|no-spam.ws|noblepioneer.com|nomail.pw|nomail.xl.cx|nomail2me.com|nomorespamemails.com|nospam.ze.tc|nospam4.us|nospamfor.us|nospammail.net|notmailinator.com|nowhere.org|nowmymail.com|nurfuerspam.de|nus.edu.sg|objectmail.com|obobbo.com|odnorazovoe.ru|oneoffemail.com|onewaymail.com|onlatedotcom.info|online.ms|opayq.com|ordinaryamerican.net|otherinbox.com|ovpn.to|owlpic.com|pancakemail.com|pcusers.otherinbox.com|pjjkp.com|plexolan.de|poczta.onet.pl|politikerclub.de|poofy.org|pookmail.com|privacy.net|privatdemail.net|proxymail.eu|prtnx.com|putthisinyourspamdatabase.com|putthisinyourspamdatabase.com|qq.com|quickinbox.com|rcpt.at|reallymymail.com|realtyalerts.ca|recode.me|recursor.net|reliable-mail.com|rhyta.com|rmqkr.net|royal.net|rtrtr.com|s0ny.net|safe-mail.net|safersignup.de|safetymail.info|safetypost.de|saynotospams.com|schafmail.de|schrott-email.de|secretemail.de|secure-mail.biz|senseless-entertainment.com|services391.com|sharklasers.com|shieldemail.com|shiftmail.com|shitmail.me|shitware.nl|shmeriously.com|shortmail.net|sibmail.com|sinnlos-mail.de|slapsfromlastnight.com|slaskpost.se|smashmail.de|smellfear.com|snakemail.com|sneakemail.com|sneakmail.de|snkmail.com|sofimail.com|solvemail.info|sogetthis.com|soodonims.com|spam4.me|spamail.de|spamarrest.com|spambob.net|spambog.ru|spambox.us|spamcannon.com|spamcannon.net|spamcon.org|spamcorptastic.com|spamcowboy.com|spamcowboy.net|spamcowboy.org|spamday.com|spamex.com|spamfree.eu|spamfree24.com|spamfree24.de|spamfree24.org|spamgoes.in|spamgourmet.com|spamgourmet.net|spamgourmet.org|spamherelots.com|spamherelots.com|spamhereplease.com|spamhereplease.com|spamhole.com|spamify.com|spaml.de|spammotel.com|spamobox.com|spamslicer.com|spamspot.com|spamthis.co.uk|spamtroll.net|speed.1s.fr|spoofmail.de|stuffmail.de|super-auswahl.de|supergreatmail.com|supermailer.jp|superrito.com|superstachel.de|suremail.info|talkinator.com|teewars.org|teleworm.com|teleworm.us|temp-mail.org|temp-mail.ru|tempe-mail.com|tempemail.co.za|tempemail.com|tempemail.net|tempemail.net|tempinbox.co.uk|tempinbox.com|tempmail.eu|tempmaildemo.com|tempmailer.com|tempmailer.de|tempomail.fr|temporaryemail.net|temporaryforwarding.com|temporaryinbox.com|temporarymailaddress.com|tempthe.net|thankyou2010.com|thc.st|thelimestones.com|thisisnotmyrealemail.com|thismail.net|throwawayemailaddress.com|tilien.com|tittbit.in|tizi.com|tmailinator.com|toomail.biz|topranklist.de|tradermail.info|trash-mail.at|trash-mail.com|trash-mail.de|trash2009.com|trashdevil.com|trashemail.de|trashmail.at|trashmail.com|trashmail.de|trashmail.me|trashmail.net|trashmail.org|trashymail.com|trialmail.de|trillianpro.com|twinmail.de|tyldd.com|uggsrock.com|umail.net|uroid.com|us.af|venompen.com|veryrealemail.com|viditag.com|viralplays.com|vpn.st|vsimcard.com|vubby.com|wasteland.rfc822.org|webemail.me|weg-werf-email.de|wegwerf-emails.de|wegwerfadresse.de|wegwerfemail.com|wegwerfemail.de|wegwerfmail.de|wegwerfmail.info|wegwerfmail.net|wegwerfmail.org|wh4f.org|whyspam.me|willhackforfood.biz|willselfdestruct.com|winemaven.info|wronghead.com|www.e4ward.com|www.mailinator.com|wwwnew.eu|x.ip6.li|xagloo.com|xemaps.com|xents.com|xmaily.com|xoxy.net|yep.it|yogamaven.com|yopmail.com|yopmail.fr|yopmail.net|yourdomain.com|yuurok.com|z1p.biz|za.com|zehnminuten.de|zehnminutenmail.de|zippymail.info|zoemail.net|zomg.info).)*$'))) ~> DomainWhichAreBanned",
        "DomainWhichAreBanned derive(eliminationReason = $bannedDomainPara,",
        "          profileStatus = $eliCA) ~> derivedBannedDomain",
        "selectReqCol filter(isNull(email)) ~> filterNullEmailProfiles",
        "filterNullEmailProfiles derive(eliminationReason = $nullEmails,",
        "          profileStatus = $eliCA) ~> derivedNullEmailProfiles",
        "caProfile, orderHistory exists(caProfile@email == orderHistory@email,",
        "     negate:true,",
        "     broadcast: 'auto')~> CaProfilesHavingNoOrderHistory",
        "derivedNullEmailProfiles select(mapColumn(",
        "          email,",
        "          customerId,",
        "          eliminationReason,",
        "          profileStatus",
        "     ),",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true) ~> select1",
        "derivedEmailNotVerified select(mapColumn(",
        "          email,",
        "          customerId,",
        "          eliminationReason,",
        "          profileStatus",
        "     ),",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true) ~> select2",
        "derivedNotRegistered select(mapColumn(",
        "          email,",
        "          customerId,",
        "          eliminationReason,",
        "          profileStatus",
        "     ),",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true) ~> select3",
        "derivedNotLoggedInProfile select(mapColumn(",
        "          email,",
        "          customerId,",
        "          eliminationReason,",
        "          profileStatus",
        "     ),",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true) ~> select4",
        "derivedBannedDomain select(mapColumn(",
        "          email,",
        "          customerId,",
        "          eliminationReason,",
        "          profileStatus",
        "     ),",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true) ~> select5",
        "naProfile, orderHistory exists(naProfile@email == orderHistory@email,",
        "     negate:true,",
        "     broadcast: 'auto')~> NaProfilesHavingNoOrderHistory",
        "NaProfilesHavingNoOrderHistory select(mapColumn(",
        "          email,",
        "          customerId,",
        "          isRegistered,",
        "          janrainUuid,",
        "          bannerOfOrigin,",
        "          emailVerified,",
        "          created,",
        "          lastLogin",
        "     ),",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true) ~> selectRequiredCol",
        "selectRequiredCol filter(isNull(email)) ~> filterNullEmailProfilesNa",
        "filterNullEmailProfilesNa derive(eliminationReason = $nullEmails,",
        "          profileStatus = $eliNA) ~> derivedColumn1",
        "derivedColumn1 select(mapColumn(",
        "          email,",
        "          customerId,",
        "          eliminationReason,",
        "          profileStatus",
        "     ),",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true) ~> select6",
        "selectRequiredCol filter(and(isNull(emailVerified), not(greaterOrEqual(toTimestamp(toLong(toString(created)),'yyyy-MM-dd HH:mm:ss'), subDays(currentTimestamp(), 365))))) ~> emailNotVerifiedNa",
        "emailNotVerifiedNa derive(eliminationReason = $createdPara,",
        "          profileStatus = $eliNA) ~> derivedEmailNotVerifiedNa",
        "derivedEmailNotVerifiedNa select(mapColumn(",
        "          email,",
        "          customerId,",
        "          eliminationReason,",
        "          profileStatus",
        "     ),",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true) ~> select7",
        "selectRequiredCol filter(not(and(isNull(emailVerified), not(greaterOrEqual(toTimestamp(toLong(toString(created)),'yyyy-MM-dd HH:mm:ss'), subDays(currentTimestamp(), 365)))))) ~> EmailVerifiedNa",
        "EmailVerifiedNa filter(and(isRegistered == toBoolean('FALSE'), not(greaterOrEqual(toTimestamp(toLong(toString(created)),'yyyy-MM-dd HH:mm:ss'), subDays(currentTimestamp(), 365))))) ~> NotRegisteredProfileNa",
        "NotRegisteredProfileNa derive(eliminationReason = $isRegisteredPara,",
        "          profileStatus = $eliNA) ~> derivedNotRegisteredNa",
        "derivedNotRegisteredNa select(mapColumn(",
        "          email,",
        "          customerId,",
        "          isRegistered,",
        "          janrainUuid,",
        "          bannerOfOrigin,",
        "          emailVerified,",
        "          created,",
        "          lastLogin,",
        "          eliminationReason,",
        "          profileStatus",
        "     ),",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true) ~> select8",
        "EmailVerifiedNa filter(not(and(isRegistered == toBoolean('FALSE'), not(greaterOrEqual(toTimestamp(toLong(toString(created)),'yyyy-MM-dd HH:mm:ss'), subDays(currentTimestamp(), 365)))))) ~> RegisteredProfileNa",
        "RegisteredProfileNa filter(not(and(isRegistered == toBoolean('FALSE'), not(greaterOrEqual(toTimestamp(toLong(toString(created)),'yyyy-MM-dd HH:mm:ss'), subDays(currentTimestamp(), 365)))))) ~> NotLoggedInProfileNa",
        "NotLoggedInProfileNa derive(eliminationReason = $loginPara,",
        "          profileStatus = $eliNA) ~> derivedNotLoggedInProfileNa",
        "derivedNotLoggedInProfileNa select(mapColumn(",
        "          email,",
        "          customerId,",
        "          isRegistered,",
        "          janrainUuid,",
        "          bannerOfOrigin,",
        "          emailVerified,",
        "          created,",
        "          lastLogin,",
        "          eliminationReason,",
        "          profileStatus",
        "     ),",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true) ~> select9",
        "RegisteredProfileNa filter(not(iif(and(isNull(lastLogin),or(bannerOfOrigin == 'flca',bannerOfOrigin == 'csca')), toBoolean('true'), iif(isNull(bannerOfOrigin), toBoolean('true'), and(not(greaterOrEqual(lastLogin,toString(subDays(currentTimestamp(),365)))), or(bannerOfOrigin == 'flca',bannerOfOrigin == 'csca')))))) ~> LoggedInProfileNa",
        "LoggedInProfileNa filter(not(rlike(email,'^((?!soledupsneakz.club|atolemdro.com|aceslaya.club|shaszn.xyz|muhlach.com|luigisneaks.com|davidssnkrs.club|qq.com*|coneysoles.us|lizama.xyz|sincarts.com|hypecopped.com|youcopped.pw|dadswag.club|randys.cash|yididu.com|jimmyshoetron.com|15p.pw|ericwenhy.club|cookgod.club|og-cooks.com|guccicooks.com|shophiddenheat.com|amplifykicks.club|solesecret.xyz|tfn27.xyz|smy666.com|isellsneakers.com|jscarts.com|tiktokfreefollowers.com|solarcooks.xyz|jimmartoccia.club|wowitslem.com|kaltashi.club|thecelibate.club|ncshoes.club|coppedbyepic.us|nate123.club|solestrikes.com|snkrmail.com|jjsamson.club|coatalcf.club|sacredslots.com|33mail.com|caspermika.club|tn1220.club|dontfuckwithme.club|next-mail.info|cart198.club|sneakermonekys.club|mattykickz.club|ryucooks.club|hypexchange.net|cristianjgarcia.club|figsoles.club|laflame.club|troxer.club|bruhszn.club|naeucop.club|kxvcop.club|resellersunite.com|worldwidesneakers.club|doncarted.club|aiobotz.com|0815.ru|0wnd.net|0wnd.org|10minutemail.co.za|10minutemail.com|123-m.com|1fsdfdsfsdf.tk|1pad.de|20minutemail.com|21cn.com|2fdgdfgdfgdf.tk|2prong.com|30minutemail.com|33mail.com|3trtretgfrfe.tk|4gfdsgfdgfd.tk|4warding.com|5ghgfhfghfgh.tk|6hjgjhgkilkj.tk|6paq.com|7tags.com|9ox.net|a-bc.net|agedmail.com|ama-trade.de|amilegit.com|amiri.net|amiriindustries.com|anonmails.de|anonymbox.com|antichef.com|antichef.net|antireg.ru|antispam.de|antispammail.de|armyspy.com|artman-conception.com|azmeil.tk|baxomale.ht.cx|beefmilk.com|bigstring.com|binkmail.com|bio-muesli.net|bobmail.info|bodhi.lawlita.com|bofthew.com|bootybay.de|boun.cr|bouncr.com|breakthru.com|brefmail.com|bsnow.net|bspamfree.org|bugmenot.com|bund.us|burstmail.info|buymoreplays.com|byom.de|c2.hu|card.zp.ua|casualdx.com|cek.pm|centermail.com|centermail.net|chammy.info|childsavetrust.org|chogmail.com|choicemail1.com|clixser.com|cmail.net|cmail.org|coldemail.info|cool.fr.nf|courriel.fr.nf|courrieltemporaire.com|crapmail.org|cust.in|cuvox.de|d3p.dk|dacoolest.com|dandikmail.com|dayrep.com|dcemail.com|deadaddress.com|deadspam.com|delikkt.de|despam.it|despammed.com|devnullmail.com|dfgh.net|digitalsanctuary.com|dingbone.com|disposableaddress.com|disposableemailaddresses.com|disposableinbox.com|dispose.it|dispostable.com|dodgeit.com|dodgit.com|donemail.ru|dontreg.com|dontsendmespam.de|drdrb.net|dump-email.info|dumpandjunk.com|dumpyemail.com|e-mail.com|e-mail.org|e4ward.com|easytrashmail.com|einmalmail.de|einrot.com|eintagsmail.de|emailgo.de|emailias.com|emaillime.com|emailsensei.com|emailtemporanea.com|emailtemporanea.net|emailtemporar.ro|emailtemporario.com.br|emailthe.net|emailtmp.com|emailwarden.com|emailx.at.hm|emailxfer.com|emeil.in|emeil.ir|emz.net|ero-tube.org|evopo.com|explodemail.com|express.net.ua|eyepaste.com|fakeinbox.com|fakeinformation.com|fansworldwide.de|fantasymail.de|fightallspam.com|filzmail.com|fivemail.de|fleckens.hu|frapmail.com|friendlymail.co.uk|fuckingduh.com|fudgerub.com|fyii.de|garliclife.com|gehensiemirnichtaufdensack.de|get2mail.fr|getairmail.com|getmails.eu|getonemail.com|giantmail.de|girlsundertheinfluence.com|gishpuppy.com|gmial.com|goemailgo.com|gotmail.net|gotmail.org|gotti.otherinbox.com|great-host.in|greensloth.com|grr.la|gsrv.co.uk|guerillamail.biz|guerillamail.com|guerrillamail.biz|guerrillamail.com|guerrillamail.de|guerrillamail.info|guerrillamail.net|guerrillamail.org|guerrillamailblock.com|gustr.com|harakirimail.com|hat-geld.de|hatespam.org|herp.in|hidemail.de|hidzz.com|hmamail.com|hopemail.biz|ieh-mail.de|ikbenspamvrij.nl|imails.info|inbax.tk|inbox.si|inboxalias.com|inboxclean.com|inboxclean.org|infocom.zp.ua|instant-mail.de|ip6.li|irish2me.com|iwi.net|jetable.com|jetable.fr.nf|jetable.net|jetable.org|jnxjn.com|jourrapide.com|jsrsolutions.com|kasmail.com|kaspop.com|killmail.com|killmail.net|klassmaster.com|klzlk.com|koszmail.pl|kurzepost.de|lawlita.com|letthemeatspam.com|lhsdv.com|lifebyfood.com|link2mail.net|litedrop.com|lol.ovpn.to|lolfreak.net|lookugly.com|lortemail.dk|lr78.com|lroid.com|lukop.dk|m21.cc|mail-filter.com|mail-temporaire.fr|mail.by|mail.mezimages.net|mail.zp.ua|mail1a.de|mail21.cc|mail2rss.org|mail333.com|mailbidon.com|mailbiz.biz|mailblocks.com|mailbucket.org|mailcat.biz|mailcatch.com|mailde.de|mailde.info|maildrop.cc|maileimer.de|mailexpire.com|mailfa.tk|mailforspam.com|mailfreeonline.com|mailguard.me|mailin8r.com|mailinater.com|mailinator.com|mailinator.net|mailinator.org|mailinator2.com|mailincubator.com|mailismagic.com|mailme.lv|mailme24.com|mailmetrash.com|mailmoat.com|mailms.com|mailnesia.com|mailnull.com|mailorg.org|mailpick.biz|mailrock.biz|mailscrap.com|mailshell.com|mailsiphon.com|mailtemp.info|mailtome.de|mailtothis.com|mailtrash.net|mailtv.net|mailtv.tv|mailzilla.com|makemetheking.com|manybrain.com|mbx.cc|mega.zik.dj|meinspamschutz.de|meltmail.com|messagebeamer.de|mezimages.net|ministry-of-silly-walks.de|mintemail.com|misterpinball.de|moncourrier.fr.nf|monemail.fr.nf|monmail.fr.nf|monumentmail.com|mt2009.com|mt2014.com|mycard.net.ua|mycleaninbox.net|mymail-in.net|mypacks.net|mypartyclip.de|myphantomemail.com|mysamp.de|mytempemail.com|mytempmail.com|mytrashmail.com|nabuma.com|neomailbox.com|nepwk.com|nervmich.net|nervtmich.net|netmails.com|netmails.net|neverbox.com|nice-4u.com|nincsmail.hu|nnh.com|no-spam.ws|noblepioneer.com|nomail.pw|nomail.xl.cx|nomail2me.com|nomorespamemails.com|nospam.ze.tc|nospam4.us|nospamfor.us|nospammail.net|notmailinator.com|nowhere.org|nowmymail.com|nurfuerspam.de|nus.edu.sg|objectmail.com|obobbo.com|odnorazovoe.ru|oneoffemail.com|onewaymail.com|onlatedotcom.info|online.ms|opayq.com|ordinaryamerican.net|otherinbox.com|ovpn.to|owlpic.com|pancakemail.com|pcusers.otherinbox.com|pjjkp.com|plexolan.de|poczta.onet.pl|politikerclub.de|poofy.org|pookmail.com|privacy.net|privatdemail.net|proxymail.eu|prtnx.com|putthisinyourspamdatabase.com|putthisinyourspamdatabase.com|qq.com|quickinbox.com|rcpt.at|reallymymail.com|realtyalerts.ca|recode.me|recursor.net|reliable-mail.com|rhyta.com|rmqkr.net|royal.net|rtrtr.com|s0ny.net|safe-mail.net|safersignup.de|safetymail.info|safetypost.de|saynotospams.com|schafmail.de|schrott-email.de|secretemail.de|secure-mail.biz|senseless-entertainment.com|services391.com|sharklasers.com|shieldemail.com|shiftmail.com|shitmail.me|shitware.nl|shmeriously.com|shortmail.net|sibmail.com|sinnlos-mail.de|slapsfromlastnight.com|slaskpost.se|smashmail.de|smellfear.com|snakemail.com|sneakemail.com|sneakmail.de|snkmail.com|sofimail.com|solvemail.info|sogetthis.com|soodonims.com|spam4.me|spamail.de|spamarrest.com|spambob.net|spambog.ru|spambox.us|spamcannon.com|spamcannon.net|spamcon.org|spamcorptastic.com|spamcowboy.com|spamcowboy.net|spamcowboy.org|spamday.com|spamex.com|spamfree.eu|spamfree24.com|spamfree24.de|spamfree24.org|spamgoes.in|spamgourmet.com|spamgourmet.net|spamgourmet.org|spamherelots.com|spamherelots.com|spamhereplease.com|spamhereplease.com|spamhole.com|spamify.com|spaml.de|spammotel.com|spamobox.com|spamslicer.com|spamspot.com|spamthis.co.uk|spamtroll.net|speed.1s.fr|spoofmail.de|stuffmail.de|super-auswahl.de|supergreatmail.com|supermailer.jp|superrito.com|superstachel.de|suremail.info|talkinator.com|teewars.org|teleworm.com|teleworm.us|temp-mail.org|temp-mail.ru|tempe-mail.com|tempemail.co.za|tempemail.com|tempemail.net|tempemail.net|tempinbox.co.uk|tempinbox.com|tempmail.eu|tempmaildemo.com|tempmailer.com|tempmailer.de|tempomail.fr|temporaryemail.net|temporaryforwarding.com|temporaryinbox.com|temporarymailaddress.com|tempthe.net|thankyou2010.com|thc.st|thelimestones.com|thisisnotmyrealemail.com|thismail.net|throwawayemailaddress.com|tilien.com|tittbit.in|tizi.com|tmailinator.com|toomail.biz|topranklist.de|tradermail.info|trash-mail.at|trash-mail.com|trash-mail.de|trash2009.com|trashdevil.com|trashemail.de|trashmail.at|trashmail.com|trashmail.de|trashmail.me|trashmail.net|trashmail.org|trashymail.com|trialmail.de|trillianpro.com|twinmail.de|tyldd.com|uggsrock.com|umail.net|uroid.com|us.af|venompen.com|veryrealemail.com|viditag.com|viralplays.com|vpn.st|vsimcard.com|vubby.com|wasteland.rfc822.org|webemail.me|weg-werf-email.de|wegwerf-emails.de|wegwerfadresse.de|wegwerfemail.com|wegwerfemail.de|wegwerfmail.de|wegwerfmail.info|wegwerfmail.net|wegwerfmail.org|wh4f.org|whyspam.me|willhackforfood.biz|willselfdestruct.com|winemaven.info|wronghead.com|www.e4ward.com|www.mailinator.com|wwwnew.eu|x.ip6.li|xagloo.com|xemaps.com|xents.com|xmaily.com|xoxy.net|yep.it|yogamaven.com|yopmail.com|yopmail.fr|yopmail.net|yourdomain.com|yuurok.com|z1p.biz|za.com|zehnminuten.de|zehnminutenmail.de|zippymail.info|zoemail.net|zomg.info).)*$'))) ~> DomainWhichAreBannedNa",
        "DomainWhichAreBannedNa derive(eliminationReason = $bannedDomainPara,",
        "          ProfileStatus = $eliNA) ~> derivedBannedDomainNa",
        "derivedBannedDomainNa select(mapColumn(",
        "          email,",
        "          customerId,",
        "          eliminationReason,",
        "          ProfileStatus",
        "     ),",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true) ~> select10",
        "select2 sink(allowSchemaDrift: true,",
        "     validateSchema: false,",
        "     input(",
        "          eliminationReason as string,",
        "          customerId as string,",
        "          profileStatus as string,",
        "          email as string",
        "     ),",
        "     deletable:false,",
        "     insertable:true,",
        "     updateable:false,",
        "     upsertable:false,",
        "     format: 'document',",
        "     batchSize: 5000,",
        "     partitionKey: ['/id'],",
        "     throughput: 10000,",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true,",
        "     saveOrder: 2,",
        "     preCommands: [],",
        "     postCommands: []) ~> sinkEmailNotVerifiedProfile",
        "select3 sink(allowSchemaDrift: true,",
        "     validateSchema: false,",
        "     input(",
        "          eliminationReason as string,",
        "          customerId as string,",
        "          profileStatus as string,",
        "          email as string",
        "     ),",
        "     deletable:false,",
        "     insertable:true,",
        "     updateable:false,",
        "     upsertable:false,",
        "     format: 'document',",
        "     batchSize: 5000,",
        "     partitionKey: ['/id'],",
        "     throughput: 10000,",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true,",
        "     saveOrder: 3,",
        "     preCommands: [],",
        "     postCommands: []) ~> sinkNotRegisteredProfile",
        "select4 sink(allowSchemaDrift: true,",
        "     validateSchema: false,",
        "     input(",
        "          eliminationReason as string,",
        "          customerId as string,",
        "          profileStatus as string,",
        "          email as string",
        "     ),",
        "     deletable:false,",
        "     insertable:true,",
        "     updateable:false,",
        "     upsertable:false,",
        "     format: 'document',",
        "     batchSize: 5000,",
        "     partitionKey: ['/id'],",
        "     throughput: 10000,",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true,",
        "     saveOrder: 4,",
        "     preCommands: [],",
        "     postCommands: []) ~> sinkNotLoggedInProfile",
        "select5 sink(allowSchemaDrift: true,",
        "     validateSchema: false,",
        "     input(",
        "          eliminationReason as string,",
        "          customerId as string,",
        "          profileStatus as string,",
        "          email as string",
        "     ),",
        "     deletable:false,",
        "     insertable:true,",
        "     updateable:false,",
        "     upsertable:false,",
        "     format: 'document',",
        "     batchSize: 5000,",
        "     partitionKey: ['/id'],",
        "     throughput: 10000,",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true,",
        "     saveOrder: 5,",
        "     preCommands: [],",
        "     postCommands: []) ~> sinkBannedDomainProfile",
        "select1 sink(allowSchemaDrift: true,",
        "     validateSchema: false,",
        "     input(",
        "          eliminationReason as string,",
        "          customerId as string,",
        "          profileStatus as string,",
        "          email as string",
        "     ),",
        "     deletable:false,",
        "     insertable:true,",
        "     updateable:false,",
        "     upsertable:false,",
        "     recreate:true,",
        "     format: 'document',",
        "     batchSize: 5000,",
        "     partitionKey: ['/id'],",
        "     throughput: 10000,",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true,",
        "     saveOrder: 1,",
        "     preCommands: [],",
        "     postCommands: []) ~> sinkNullEmails",
        "select6 sink(allowSchemaDrift: true,",
        "     validateSchema: false,",
        "     input(",
        "          eliminationReason as string,",
        "          customerId as string,",
        "          profileStatus as string,",
        "          email as string",
        "     ),",
        "     deletable:false,",
        "     insertable:true,",
        "     updateable:false,",
        "     upsertable:false,",
        "     format: 'document',",
        "     batchSize: 5000,",
        "     partitionKey: ['/id'],",
        "     throughput: 10000,",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true,",
        "     saveOrder: 1,",
        "     preCommands: [],",
        "     postCommands: []) ~> sinkNullEmailsNa",
        "select7 sink(allowSchemaDrift: true,",
        "     validateSchema: false,",
        "     input(",
        "          eliminationReason as string,",
        "          customerId as string,",
        "          profileStatus as string,",
        "          email as string",
        "     ),",
        "     deletable:false,",
        "     insertable:true,",
        "     updateable:false,",
        "     upsertable:false,",
        "     format: 'document',",
        "     batchSize: 5000,",
        "     partitionKey: ['/id'],",
        "     throughput: 10000,",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true,",
        "     saveOrder: 2,",
        "     preCommands: [],",
        "     postCommands: []) ~> sinkEmailNotVerifiedProfileNa",
        "select8 sink(allowSchemaDrift: true,",
        "     validateSchema: false,",
        "     input(",
        "          eliminationReason as string,",
        "          customerId as string,",
        "          profileStatus as string,",
        "          email as string",
        "     ),",
        "     deletable:false,",
        "     insertable:true,",
        "     updateable:false,",
        "     upsertable:false,",
        "     format: 'document',",
        "     batchSize: 5000,",
        "     partitionKey: ['/id'],",
        "     throughput: 10000,",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true,",
        "     saveOrder: 3,",
        "     preCommands: [],",
        "     postCommands: []) ~> sinkNotRegisteredProfileNa",
        "select9 sink(allowSchemaDrift: true,",
        "     validateSchema: false,",
        "     input(",
        "          eliminationReason as string,",
        "          customerId as string,",
        "          profileStatus as string,",
        "          email as string",
        "     ),",
        "     deletable:false,",
        "     insertable:true,",
        "     updateable:false,",
        "     upsertable:false,",
        "     format: 'document',",
        "     batchSize: 5000,",
        "     partitionKey: ['/id'],",
        "     throughput: 10000,",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true,",
        "     saveOrder: 4,",
        "     preCommands: [],",
        "     postCommands: []) ~> sinkNotLoggedInProfileNa",
        "select10 sink(allowSchemaDrift: true,",
        "     validateSchema: false,",
        "     input(",
        "          eliminationReason as string,",
        "          customerId as string,",
        "          profileStatus as string,",
        "          email as string",
        "     ),",
        "     deletable:false,",
        "     insertable:true,",
        "     updateable:false,",
        "     upsertable:false,",
        "     format: 'document',",
        "     batchSize: 5000,",
        "     partitionKey: ['/id'],",
        "     throughput: 10000,",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true,",
        "     saveOrder: 5,",
        "     preCommands: [],",
        "     postCommands: []) ~> sinkBannedDomainProfileNa"
      ]
    }
  }
}